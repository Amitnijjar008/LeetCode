public class Solution {
    public String longestPalindrome(String s) {
        int front = 0;
        int back = 0;        
        int width = 0;
        int w1 = 0;
        int w2 = 0;
        for(int x = 0; x < s.length(); x++){
            w1 = check(s,x,x+1);
            w2 = check(s,x,x);
            width = Math.max(w1,w2);
                if (width > (back - front)) {
                    front = x - (width - 1) / 2;
                    back = x + width / 2;
                }
        }


        return s.substring(front,back + 1);
        
    }
    

    private int check(String s, int L, int R) {
        int l = L;
        int r = R;
        while (l >= 0 && r < s.length() && s.charAt(l) == s.charAt(r)) {
            l--;
            r++;
        }
        return r - l - 1;
    }    
    
    
}
